<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.kt.smp.stt.statistics.mapper.SttSystemStatusMapper">

    <resultMap id="systemStatusResultMap" type="com.kt.smp.stt.monitoring.dto.SystemStatusSearchResult">
        <result column="SERVER_ID" property="serverName"/>
        <result column="CPU_USED" property="cpuUsed"/>
        <result column="MAX_MEMORY_SIZE" property="maxMemorySize"/>
        <result column="FREE_MEMORY_SIZE" property="freeMemorySize"/>        <result column="MAX_APP_STORAGE_SIZE" property="maxAppStorageSize"/>
        <result column="FREE_APP_STORAGE_SIZE" property="freeAppStorageSize"/>      
		<result column="BPS" property="bps"/>
		<result column="PPS" property="pps"/>
		<result column="LAST_CHECK_TIME" property="lastCheckTime"/>   
    </resultMap>

 	<!--  SELECT  -->
 	<select id="listPage" parameterType="com.kt.smp.stt.monitoring.dto.SystemStatusSearchRequestDto"
			resultType="com.kt.smp.stt.monitoring.dto.SystemStatusSearchResult">
	/* SystemStatusMapper.listPage */
		SELECT
			*
		FROM (		
			SELECT
			ROWNUM AS RNUM
			, RS.*
			FROM (
				SELECT
					ID AS id
					, SERVER_ID AS serverName
					, CPU_USED AS cpuUsed
					, MAX_MEMORY_SIZE AS maxMemorySize
					, FREE_MEMORY_SIZE AS freeMemorySize
					, MAX_APP_STORAGE_SIZE AS maxAppStorageSize
					, FREE_APP_STORAGE_SIZE AS freeAppStorageSize
					, BPS AS bps
					, PPS AS pps
					, TO_CHAR(LAST_CHECK_TIME, 'YYYY-MM-DD HH:MI:SS') AS lastCheckTime
					FROM IAAP_STT_SYSTEM_STATUS RS
					WHERE 1=1
					<if test="startSearchDate != null and !startSearchDate.equals('')">
						AND LAST_CHECK_TIME >= TO_TIMESTAMP(#{startSearchDate}, 'YYYY-MM-DD HH24:MI')
					</if>
					<if test="endSearchDate != null and !endSearchDate.equals('')">
						AND TO_TIMESTAMP(#{endSearchDate}, 'YYYY-MM-DD HH24:MI') >= LAST_CHECK_TIME	
					</if>
					<if test="orderType == 'DESC'">
						ORDER BY LAST_CHECK_TIME DESC
					</if>
					<if test="orderType == 'ASC'">
						ORDER BY LAST_CHECK_TIME ASC
					</if>
					
				) RS
		
		) RS WHERE 1=1
		<if test="!doNotPaging">AND RNUM BETWEEN #{offset} + 1 AND #{offset} + #{pageSize} </if>
	</select>
	
	<select id="listByDate"	parameterType="com.kt.smp.stt.monitoring.dto.SystemStatusSearchRequestDto" resultMap="systemStatusResultMap">
	/* SystemStatusMapper.listByDate */
	SELECT * 
	FROM
	(SELECT ROWNUM AS RNUM
		, RS.*
	 FROM(
		SELECT SERVER_ID
		, ROUND(AVG(CPU_AV)) AS CPU_USED
		, ROUND(AVG(MEM_TT)) AS MAX_MEMORY_SIZE
		, ROUND((AVG(MEM_TT) - AVG(MEM_AV))) AS FREE_MEMORY_SIZE
		, ROUND(AVG(STR_TT)) AS MAX_APP_STORAGE_SIZE
		, ROUND((AVG(STR_TT) - AVG(STR_AV))) AS FREE_APP_STORAGE_SIZE
		, ROUND(AVG(BPS_AV)) AS BPS
		, ROUND(AVG(PPS_AV)) AS PPS
		<choose>
		<when test="searchUnit.toString() == 'HOUR'">
		, TO_CHAR(TO_DATE(DATE_HOUR,'YYYY-MM-DD HH24'), 'YYYY-MM-DD HH24') as LAST_CHECK_TIME
		</when>
		<when test="searchUnit.toString() == 'DAY'">
		, TO_CHAR(TO_DATE(DATE_HOUR,'YYYY-MM-DD HH24'), 'YYYY-MM-DD') as LAST_CHECK_TIME
		</when>
		<when test="searchUnit.toString() == 'MONTH'">
		, TO_CHAR(TO_DATE(DATE_HOUR,'YYYY-MM-DD HH24'), 'YYYY-MM') as LAST_CHECK_TIME
		</when>	
		</choose>
		FROM IAAP_STT_SYSTEM_STATUS_STATH 
		WHERE 1=1
		<if test="startSearchDate != null and !startSearchDate.equals('')">
			AND TO_TIMESTAMP(DATE_HOUR, 'YYYYMMDDHH24') >= TO_TIMESTAMP(#{startSearchDate}, 'YYYY-MM-DD HH24:MI')
		</if>
		<if test="endSearchDate != null and !endSearchDate.equals('')">
			AND TO_TIMESTAMP(#{endSearchDate}, 'YYYY-MM-DD HH24:MI') >= TO_TIMESTAMP(DATE_HOUR, 'YYYYMMDDHH24')	
		</if>
		<choose>
		<when test="searchUnit.toString() == 'HOUR'">
			GROUP BY TO_CHAR(TO_DATE(DATE_HOUR,'YYYY-MM-DD HH24'), 'YYYY-MM-DD HH24'), SERVER_ID 
		</when>
		<when test="searchUnit.toString() == 'DAY'">
			GROUP BY TO_CHAR(TO_DATE(DATE_HOUR,'YYYY-MM-DD HH24'), 'YYYY-MM-DD'), SERVER_ID 
		</when>
		<when test="searchUnit.toString() == 'MONTH'">
			GROUP BY TO_CHAR(TO_DATE(DATE_HOUR,'YYYY-MM-DD HH24'), 'YYYY-MM'), SERVER_ID 
		</when>	
		</choose>
		<if test="orderType == 'DESC'">
			ORDER BY LAST_CHECK_TIME DESC
		</if>
		<if test="orderType == 'ASC'">
			ORDER BY LAST_CHECK_TIME ASC
		</if>
			) RS 
		) WHERE 1=1
		<if test="!doNotPaging">AND RNUM BETWEEN #{offset} + 1 AND #{offset} + #{pageSize} </if>
	</select>
	
	
	<select id="count" parameterType="com.kt.smp.stt.monitoring.dto.SystemStatusSearchRequestDto"
			resultType="Integer">
		/* SttSystemStatusMapper.count */
		SELECT COUNT(1)
		FROM ( SELECT * 
			FROM IAAP_STT_SYSTEM_STATUS RS
			WHERE 1=1
			<if test="startSearchDate != null and !startSearchDate.equals('')">
				AND LAST_CHECK_TIME >= TO_TIMESTAMP(#{startSearchDate}, 'YYYY-MM-DD HH24:MI')
			</if>
			<if test="endSearchDate != null and !endSearchDate.equals('')">
				AND TO_TIMESTAMP(#{endSearchDate}, 'YYYY-MM-DD HH24:MI') >= LAST_CHECK_TIME	
			</if>
		)
	</select>
	
 	<select id= "countByDate" parameterType="com.kt.smp.stt.monitoring.dto.SystemStatusSearchRequestDto"
			resultType="Integer">
		SELECT COUNT(1)
		FROM ( SELECT 
			<choose>
				<when test="searchUnit.toString() == 'HOUR'">
				TO_CHAR(TO_DATE(DATE_HOUR,'YYYY-MM-DD HH24'), 'YYYY-MM-DD HH24') as LAST_CHECK_TIME
				</when>
				<when test="searchUnit.toString() == 'DAY'">
				TO_CHAR(TO_DATE(DATE_HOUR,'YYYY-MM-DD HH24'), 'YYYY-MM-DD') as LAST_CHECK_TIME
				</when>
				<when test="searchUnit.toString() == 'MONTH'">
				TO_CHAR(TO_DATE(DATE_HOUR,'YYYY-MM-DD HH24'), 'YYYY-MM') as LAST_CHECK_TIME
				</when>	
				</choose>
			FROM IAAP_STT_SYSTEM_STATUS_STATH
			WHERE 1=1
		<if test="startSearchDate != null and !startSearchDate.equals('')">
			AND TO_TIMESTAMP(DATE_HOUR, 'YYYYMMDDHH24') >= TO_TIMESTAMP(#{startSearchDate}, 'YYYY-MM-DD HH24:MI')
		</if>
		<if test="endSearchDate != null and !endSearchDate.equals('')">
			AND TO_TIMESTAMP(#{endSearchDate}, 'YYYY-MM-DD HH24:MI') >= TO_TIMESTAMP(DATE_HOUR, 'YYYYMMDDHH24')	
		</if>
			<choose>
			<when test="searchUnit.toString() == 'HOUR'">
				GROUP BY TO_CHAR(TO_DATE(DATE_HOUR,'YYYY-MM-DD HH24'), 'YYYY-MM-DD HH24'), SERVER_ID 
			</when>
			<when test="searchUnit.toString() == 'DAY'">
				GROUP BY TO_CHAR(TO_DATE(DATE_HOUR,'YYYY-MM-DD HH24'), 'YYYY-MM-DD'), SERVER_ID 
			</when>
			<when test="searchUnit.toString() == 'MONTH'">
				GROUP BY TO_CHAR(TO_DATE(DATE_HOUR,'YYYY-MM-DD HH24'), 'YYYY-MM'), SERVER_ID 
			</when>	
			</choose>
			) 
	</select>
	
    <!--  INSERT  -->
    <select id="exists" parameterType="com.kt.smp.stt.statistics.domain.SttServerInfoVO"
    	resultType="int">
	/* SystemStatusMapper.exists */
		SELECT count(*) FROM IAAP_STT_SYSTEM_STATUS 
		WHERE SERVER_ID = #{serverName} 
			AND LAST_CHECK_TIME = TO_TIMESTAMP(#{lastCheckTime}, 'YYYYMMDDHH24MISSFF')
	</select>
	
    <insert id="insert" parameterType="com.kt.smp.stt.statistics.domain.SttServerInfoVO">
		/* SttSystemStatusMapper.insert */
        INSERT INTO IAAP_STT_SYSTEM_STATUS (
        	ID, SERVER_ID, CPU_USED
        	, MAX_MEMORY_SIZE, FREE_MEMORY_SIZE, MAX_APP_STORAGE_SIZE
        	, FREE_APP_STORAGE_SIZE
        	, BPS, PPS, LAST_CHECK_TIME
        	, REG_DT, REG_ID, REG_IP
        )
        VALUES (
	        SEQ_IAAP_STT_SYSTEM_STATUS.NEXTVAL, #{serverName}, #{cpuUsed}
	        , #{maxMemorySize}, #{freeMemorySize}, #{maxAppStorageSize}
	        , #{freeAppStorageSize}
	        , #{bps}, #{pps}, TO_TIMESTAMP(#{lastCheckTime}, 'YYYYMMDDHH24MISSFF')
	        , current_date, #{regId}, #{regIp}
        )
    </insert>
    
	<insert id="insertSystemStatusStatHour" >
	/* SystemStatusMapper.insertSystemStatusStatHour */
		INSERT INTO IAAP_STT_SYSTEM_STATUS_STATH
			(DATE_HOUR, SERVER_ID, CPU_MX, CPU_MN, CPU_AV
			, MEM_TT, MEM_MX, MEM_MN, MEM_AV, STR_TT, STR_MX, STR_MN, STR_AV
			, LOG_TT, LOG_MX, LOG_MN, LOG_AV, BPS_MX, BPS_MN, BPS_AV
			, PPS_MX, PPS_MN, PPS_AV)
		SELECT a.timeHour, a.SERVER_ID, a.cpuMx, a.cpuMn, a.cpuAv
			, a.memTt, a.memMx, a.memMn, a.memAv, a.strTt, a.strMx, a.strMn, a.strAv
			, a.logTt, a.logMx, a.logMn, a.logAv, a.bpsMx, a.bpsMn, a.bpsAv
			, a.ppsMx, a.ppsMn, a.ppsAv
		FROM (
			SELECT a.timeHour, a.SERVER_ID -- , count(0) cnt
				, max(CPU_USED) cpuMx, min(CPU_USED) cpuMn, round(avg(CPU_USED)) cpuAv
				, max(MAX_MEMORY_SIZE) memTt
				, max(FREE_MEMORY_SIZE) memMx, min(FREE_MEMORY_SIZE) memMn, round(avg(FREE_MEMORY_SIZE)) memAv
				, max(MAX_APP_STORAGE_SIZE) strTt
				, max(FREE_APP_STORAGE_SIZE) strMx, min(FREE_APP_STORAGE_SIZE) strMn, round(avg(FREE_APP_STORAGE_SIZE)) strAv
				, max(MAX_LOG_STORAGE_SIZE) logTt
				, max(FREE_LOG_STORAGE_SIZE) logMx, min(FREE_LOG_STORAGE_SIZE) logMn, round(avg(FREE_LOG_STORAGE_SIZE)) logAv
				, max(BPS) bpsMx, min(BPS) bpsMn, round(avg(BPS)) bpsAv
				, max(PPS) ppsMx, min(PPS) ppsMn, round(avg(PPS)) ppsAv
			FROM (
				SELECT
					TO_CHAR(LAST_CHECK_TIME, 'YYYYMMDDHH') AS timeHour
					, SERVER_ID, CPU_USED, MAX_MEMORY_SIZE, FREE_MEMORY_SIZE
					, MAX_APP_STORAGE_SIZE, FREE_APP_STORAGE_SIZE
					, MAX_LOG_STORAGE_SIZE, FREE_LOG_STORAGE_SIZE
					, BPS, PPS
				FROM IAAP_STT_SYSTEM_STATUS s
				WHERE TO_CHAR(LAST_CHECK_TIME, 'YYYYMMDDHH')  &gt;=  TO_CHAR(current_date - 1,  'YYYYMMDDHH')
					AND TO_CHAR(LAST_CHECK_TIME, 'YYYYMMDDHH')  &lt; TO_CHAR(current_date - 1/24,  'YYYYMMDDHH')
			) a
			GROUP BY a.timeHour, a.SERVER_ID
			ORDER BY a.timeHour, a.SERVER_ID
		) a
		LEFT OUTER JOIN IAAP_STT_SYSTEM_STATUS_STATH h
			on h.DATE_HOUR = a.timeHour and h.SERVER_ID = a.SERVER_ID
		WHERE h.DATE_HOUR is null
	</insert>
	
	<sql id="selectBody">
			RS.ID AS id
			, RS.SERVER_ID AS serverName
			, RS.CPU_USED AS cpuUsed
			, RS.MAX_MEMORY_SIZE AS maxMemorySize
			, RS.FREE_MEMORY_SIZE AS freeMemorySize
			, RS.MAX_APP_STORAGE_SIZE AS maxAppStorageSize
			, RS.FREE_APP_STORAGE_SIZE AS freeAppStorageSize
			, RS.BPS AS bps
			, RS.PPS AS pps
			, TO_CHAR(RS.LAST_CHECK_TIME, 'YYYYMMDDHH24MISS') AS lastCheckTime
	</sql>
	
    <select id="getLastData" resultType="com.kt.smp.stt.monitoring.dto.SystemStatusSearchResult">
	/* SystemStatusMapper.getLastData */
		SELECT
			<include refid="selectBody"/>
		FROM 
			IAAP_STT_SYSTEM_STATUS RS
		JOIN
			(
				SELECT
					SERVER_ID
					, MAX(LAST_CHECK_TIME) AS LAST_CHECK_TIME
				FROM
					IAAP_STT_SYSTEM_STATUS
				GROUP BY SERVER_ID
			) T
		ON
			RS.SERVER_ID = T.SERVER_ID
		AND
			RS.LAST_CHECK_TIME = T.LAST_CHECK_TIME
		WHERE RS.LAST_CHECK_TIME > (CURRENT_DATE-1/24/60)
	</select>
	
	<select id="getRealtimeChart" resultType="com.kt.smp.stt.monitoring.dto.SystemStatusSearchResult">
		/* SystemStatusMapper.getRealtimeChart */
		SELECT
			ID AS id
			, SERVER_ID AS serverName
			, CPU_USED AS cpuUsed
			, MAX_MEMORY_SIZE AS maxMemorySize
			, FREE_MEMORY_SIZE AS freeMemorySize
			, MAX_APP_STORAGE_SIZE AS maxAppStorageSize
			, FREE_APP_STORAGE_SIZE AS freeAppStorageSize
			, BPS AS bps
			, PPS AS pps
			, TO_CHAR(LAST_CHECK_TIME, 'YYYY-MM-DD HH:MI:SS') AS lastCheckTime
		FROM 
			IAAP_STT_SYSTEM_STATUS RS
		WHERE RS.LAST_CHECK_TIME > (CURRENT_DATE-1/24)
	</select>

</mapper>
